{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///E:/LEARN/nextjs-chat-app/pages/api/socketio.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nimport { Server as ServerIO } from 'socket.io';\r\nimport { Server as NetServer } from 'http';\r\nimport { Socket as NetSocket } from 'net';\r\n\r\ninterface SocketServer extends NetServer {\r\n  io?: ServerIO | undefined;\r\n}\r\n\r\ninterface SocketWithIO extends NetSocket {\r\n  server: SocketServer;\r\n}\r\n\r\ninterface NextApiResponseWithSocket extends NextApiResponse {\r\n  socket: SocketWithIO;\r\n}\r\n\r\ninterface ChatMessage {\r\n  room: string;\r\n  message: string;\r\n  sender: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport default function SocketHandler(req: NextApiRequest, res: NextApiResponseWithSocket) {\r\n  if (!res.socket.server.io) {\r\n    console.log('Socket.io sedang diinisialisasi...');\r\n    const io = new ServerIO(res.socket.server, {\r\n      path: '/api/socketio',\r\n      addTrailingSlash: false,\r\n      cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"]\r\n      }\r\n    });\r\n    res.socket.server.io = io;\r\n\r\n    io.on('connection', (socket) => {\r\n      console.log(`Client terhubung: ${socket.id}`);\r\n\r\n      // Event untuk bergabung ke room\r\n      socket.on('joinRoom', (data: { room: string; username: string }) => {\r\n        const { room, username } = data;\r\n        socket.join(room);\r\n        console.log(`${username} (${socket.id}) bergabung ke room: ${room}`);\r\n        \r\n        // Kirim notifikasi ke semua user di room bahwa ada user baru\r\n        socket.to(room).emit('userJoined', {\r\n          message: `${username} bergabung ke room`,\r\n          timestamp: Date.now()\r\n        });\r\n      });\r\n\r\n      // Event untuk mengirim pesan chat\r\n      socket.on('chatMessage', (data: ChatMessage) => {\r\n        const { room, message, sender } = data;\r\n        const messageData = {\r\n          message,\r\n          sender,\r\n          timestamp: Date.now()\r\n        };\r\n        \r\n        console.log(`Pesan dari ${sender} di room ${room}: ${message}`);\r\n        \r\n        // Kirim pesan ke semua user di room (termasuk pengirim)\r\n        io.to(room).emit('message', messageData);\r\n      });\r\n\r\n      // Event ketika user disconnect\r\n      socket.on('disconnect', () => {\r\n        console.log(`Client terputus: ${socket.id}`);\r\n      });\r\n    });\r\n  } else {\r\n    console.log('Socket.io sudah berjalan');\r\n  }\r\n  res.end();\r\n}\r\n"],"names":[],"mappings":";;;AACA;;;;;;AAuBe,SAAS,cAAc,GAAmB,EAAE,GAA8B;IACvF,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;QACzB,QAAQ,GAAG,CAAC;QACZ,MAAM,KAAK,IAAI,wHAAA,CAAA,SAAQ,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;YACzC,MAAM;YACN,kBAAkB;YAClB,MAAM;gBACJ,QAAQ;gBACR,SAAS;oBAAC;oBAAO;iBAAO;YAC1B;QACF;QACA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG;QAEvB,GAAG,EAAE,CAAC,cAAc,CAAC;YACnB,QAAQ,GAAG,CAAC,CAAC,kBAAkB,EAAE,OAAO,EAAE,EAAE;YAE5C,gCAAgC;YAChC,OAAO,EAAE,CAAC,YAAY,CAAC;gBACrB,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG;gBAC3B,OAAO,IAAI,CAAC;gBACZ,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE,EAAE,OAAO,EAAE,CAAC,qBAAqB,EAAE,MAAM;gBAEnE,6DAA6D;gBAC7D,OAAO,EAAE,CAAC,MAAM,IAAI,CAAC,cAAc;oBACjC,SAAS,GAAG,SAAS,kBAAkB,CAAC;oBACxC,WAAW,KAAK,GAAG;gBACrB;YACF;YAEA,kCAAkC;YAClC,OAAO,EAAE,CAAC,eAAe,CAAC;gBACxB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;gBAClC,MAAM,cAAc;oBAClB;oBACA;oBACA,WAAW,KAAK,GAAG;gBACrB;gBAEA,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,OAAO,SAAS,EAAE,KAAK,EAAE,EAAE,SAAS;gBAE9D,wDAAwD;gBACxD,GAAG,EAAE,CAAC,MAAM,IAAI,CAAC,WAAW;YAC9B;YAEA,+BAA+B;YAC/B,OAAO,EAAE,CAAC,cAAc;gBACtB,QAAQ,GAAG,CAAC,CAAC,iBAAiB,EAAE,OAAO,EAAE,EAAE;YAC7C;QACF;IACF,OAAO;QACL,QAAQ,GAAG,CAAC;IACd;IACA,IAAI,GAAG;AACT","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///E:/LEARN/nextjs-chat-app/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///E:/LEARN/nextjs-chat-app/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///E:/LEARN/nextjs-chat-app/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///E:/LEARN/nextjs-chat-app/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,mHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,mHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}